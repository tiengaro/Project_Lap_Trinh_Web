#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OkCatStore.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ShoesStore")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCONFIG(CONFIG instance);
    partial void UpdateCONFIG(CONFIG instance);
    partial void DeleteCONFIG(CONFIG instance);
    partial void InsertSIZE(SIZE instance);
    partial void UpdateSIZE(SIZE instance);
    partial void DeleteSIZE(SIZE instance);
    partial void InsertCT_DATHANG(CT_DATHANG instance);
    partial void UpdateCT_DATHANG(CT_DATHANG instance);
    partial void DeleteCT_DATHANG(CT_DATHANG instance);
    partial void InsertCT_LOAISP(CT_LOAISP instance);
    partial void UpdateCT_LOAISP(CT_LOAISP instance);
    partial void DeleteCT_LOAISP(CT_LOAISP instance);
    partial void InsertCT_NHAPHANG(CT_NHAPHANG instance);
    partial void UpdateCT_NHAPHANG(CT_NHAPHANG instance);
    partial void DeleteCT_NHAPHANG(CT_NHAPHANG instance);
    partial void InsertDONDATHANG(DONDATHANG instance);
    partial void UpdateDONDATHANG(DONDATHANG instance);
    partial void DeleteDONDATHANG(DONDATHANG instance);
    partial void InsertDONNHAPHANG(DONNHAPHANG instance);
    partial void UpdateDONNHAPHANG(DONNHAPHANG instance);
    partial void DeleteDONNHAPHANG(DONNHAPHANG instance);
    partial void InsertHINHANH(HINHANH instance);
    partial void UpdateHINHANH(HINHANH instance);
    partial void DeleteHINHANH(HINHANH instance);
    partial void InsertHINHTHUCTHANHTOAN(HINHTHUCTHANHTOAN instance);
    partial void UpdateHINHTHUCTHANHTOAN(HINHTHUCTHANHTOAN instance);
    partial void DeleteHINHTHUCTHANHTOAN(HINHTHUCTHANHTOAN instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertLOAISP(LOAISP instance);
    partial void UpdateLOAISP(LOAISP instance);
    partial void DeleteLOAISP(LOAISP instance);
    partial void InsertPHONGCACH(PHONGCACH instance);
    partial void UpdatePHONGCACH(PHONGCACH instance);
    partial void DeletePHONGCACH(PHONGCACH instance);
    partial void InsertREVIEW(REVIEW instance);
    partial void UpdateREVIEW(REVIEW instance);
    partial void DeleteREVIEW(REVIEW instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertTHUONGHIEU(THUONGHIEU instance);
    partial void UpdateTHUONGHIEU(THUONGHIEU instance);
    partial void DeleteTHUONGHIEU(THUONGHIEU instance);
    partial void InsertLIENHE(LIENHE instance);
    partial void UpdateLIENHE(LIENHE instance);
    partial void DeleteLIENHE(LIENHE instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ShoesStoreConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CONFIG> CONFIGs
		{
			get
			{
				return this.GetTable<CONFIG>();
			}
		}
		
		public System.Data.Linq.Table<SIZE> SIZEs
		{
			get
			{
				return this.GetTable<SIZE>();
			}
		}
		
		public System.Data.Linq.Table<CT_DATHANG> CT_DATHANGs
		{
			get
			{
				return this.GetTable<CT_DATHANG>();
			}
		}
		
		public System.Data.Linq.Table<CT_LOAISP> CT_LOAISPs
		{
			get
			{
				return this.GetTable<CT_LOAISP>();
			}
		}
		
		public System.Data.Linq.Table<CT_NHAPHANG> CT_NHAPHANGs
		{
			get
			{
				return this.GetTable<CT_NHAPHANG>();
			}
		}
		
		public System.Data.Linq.Table<DONDATHANG> DONDATHANGs
		{
			get
			{
				return this.GetTable<DONDATHANG>();
			}
		}
		
		public System.Data.Linq.Table<DONNHAPHANG> DONNHAPHANGs
		{
			get
			{
				return this.GetTable<DONNHAPHANG>();
			}
		}
		
		public System.Data.Linq.Table<HINHANH> HINHANHs
		{
			get
			{
				return this.GetTable<HINHANH>();
			}
		}
		
		public System.Data.Linq.Table<HINHTHUCTHANHTOAN> HINHTHUCTHANHTOANs
		{
			get
			{
				return this.GetTable<HINHTHUCTHANHTOAN>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LOAISP> LOAISPs
		{
			get
			{
				return this.GetTable<LOAISP>();
			}
		}
		
		public System.Data.Linq.Table<PHONGCACH> PHONGCACHes
		{
			get
			{
				return this.GetTable<PHONGCACH>();
			}
		}
		
		public System.Data.Linq.Table<REVIEW> REVIEWs
		{
			get
			{
				return this.GetTable<REVIEW>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<THUONGHIEU> THUONGHIEUs
		{
			get
			{
				return this.GetTable<THUONGHIEU>();
			}
		}
		
		public System.Data.Linq.Table<LIENHE> LIENHEs
		{
			get
			{
				return this.GetTable<LIENHE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONFIG")]
	public partial class CONFIG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TAIKHOAN;
		
		private string _MATKHAU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTAIKHOANChanging(string value);
    partial void OnTAIKHOANChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    #endregion
		
		public CONFIG()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAIKHOAN", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN;
			}
			set
			{
				if ((this._TAIKHOAN != value))
				{
					this.OnTAIKHOANChanging(value);
					this.SendPropertyChanging();
					this._TAIKHOAN = value;
					this.SendPropertyChanged("TAIKHOAN");
					this.OnTAIKHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="VarChar(50)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIZE")]
	public partial class SIZE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MASIZE;
		
		private string _TENSIZE;
		
		private string _MALOAISP;
		
		private EntityRef<LOAISP> _LOAISP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASIZEChanging(int value);
    partial void OnMASIZEChanged();
    partial void OnTENSIZEChanging(string value);
    partial void OnTENSIZEChanged();
    partial void OnMALOAISPChanging(string value);
    partial void OnMALOAISPChanged();
    #endregion
		
		public SIZE()
		{
			this._LOAISP = default(EntityRef<LOAISP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASIZE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MASIZE
		{
			get
			{
				return this._MASIZE;
			}
			set
			{
				if ((this._MASIZE != value))
				{
					this.OnMASIZEChanging(value);
					this.SendPropertyChanging();
					this._MASIZE = value;
					this.SendPropertyChanged("MASIZE");
					this.OnMASIZEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSIZE", DbType="NVarChar(10)")]
		public string TENSIZE
		{
			get
			{
				return this._TENSIZE;
			}
			set
			{
				if ((this._TENSIZE != value))
				{
					this.OnTENSIZEChanging(value);
					this.SendPropertyChanging();
					this._TENSIZE = value;
					this.SendPropertyChanged("TENSIZE");
					this.OnTENSIZEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAISP", DbType="Char(2)")]
		public string MALOAISP
		{
			get
			{
				return this._MALOAISP;
			}
			set
			{
				if ((this._MALOAISP != value))
				{
					if (this._LOAISP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAISPChanging(value);
					this.SendPropertyChanging();
					this._MALOAISP = value;
					this.SendPropertyChanged("MALOAISP");
					this.OnMALOAISPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_SIZE", Storage="_LOAISP", ThisKey="MALOAISP", OtherKey="MALOAISP", IsForeignKey=true)]
		public LOAISP LOAISP
		{
			get
			{
				return this._LOAISP.Entity;
			}
			set
			{
				LOAISP previousValue = this._LOAISP.Entity;
				if (((previousValue != value) 
							|| (this._LOAISP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISP.Entity = null;
						previousValue.SIZEs.Remove(this);
					}
					this._LOAISP.Entity = value;
					if ((value != null))
					{
						value.SIZEs.Add(this);
						this._MALOAISP = value.MALOAISP;
					}
					else
					{
						this._MALOAISP = default(string);
					}
					this.SendPropertyChanged("LOAISP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_DATHANG")]
	public partial class CT_DATHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MASP;
		
		private int _MADDH;
		
		private System.Nullable<int> _SOLUONGDAT;
		
		private System.Nullable<decimal> _DONGIA;
		
		private EntityRef<DONDATHANG> _DONDATHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(int value);
    partial void OnMASPChanged();
    partial void OnMADDHChanging(int value);
    partial void OnMADDHChanged();
    partial void OnSOLUONGDATChanging(System.Nullable<int> value);
    partial void OnSOLUONGDATChanged();
    partial void OnDONGIAChanging(System.Nullable<decimal> value);
    partial void OnDONGIAChanged();
    #endregion
		
		public CT_DATHANG()
		{
			this._DONDATHANG = default(EntityRef<DONDATHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADDH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MADDH
		{
			get
			{
				return this._MADDH;
			}
			set
			{
				if ((this._MADDH != value))
				{
					if (this._DONDATHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADDHChanging(value);
					this.SendPropertyChanging();
					this._MADDH = value;
					this.SendPropertyChanged("MADDH");
					this.OnMADDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGDAT", DbType="Int")]
		public System.Nullable<int> SOLUONGDAT
		{
			get
			{
				return this._SOLUONGDAT;
			}
			set
			{
				if ((this._SOLUONGDAT != value))
				{
					this.OnSOLUONGDATChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGDAT = value;
					this.SendPropertyChanged("SOLUONGDAT");
					this.OnSOLUONGDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Decimal(12,0)")]
		public System.Nullable<decimal> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONDATHANG_CT_DATHANG", Storage="_DONDATHANG", ThisKey="MADDH", OtherKey="MADDH", IsForeignKey=true)]
		public DONDATHANG DONDATHANG
		{
			get
			{
				return this._DONDATHANG.Entity;
			}
			set
			{
				DONDATHANG previousValue = this._DONDATHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONDATHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONDATHANG.Entity = null;
						previousValue.CT_DATHANGs.Remove(this);
					}
					this._DONDATHANG.Entity = value;
					if ((value != null))
					{
						value.CT_DATHANGs.Add(this);
						this._MADDH = value.MADDH;
					}
					else
					{
						this._MADDH = default(int);
					}
					this.SendPropertyChanged("DONDATHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CT_DATHANG", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CT_DATHANGs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CT_DATHANGs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_LOAISP")]
	public partial class CT_LOAISP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOAISP;
		
		private int _MASP;
		
		private EntityRef<LOAISP> _LOAISP;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAISPChanging(string value);
    partial void OnMALOAISPChanged();
    partial void OnMASPChanging(int value);
    partial void OnMASPChanged();
    #endregion
		
		public CT_LOAISP()
		{
			this._LOAISP = default(EntityRef<LOAISP>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAISP", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOAISP
		{
			get
			{
				return this._MALOAISP;
			}
			set
			{
				if ((this._MALOAISP != value))
				{
					if (this._LOAISP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAISPChanging(value);
					this.SendPropertyChanging();
					this._MALOAISP = value;
					this.SendPropertyChanged("MALOAISP");
					this.OnMALOAISPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_CT_LOAISP", Storage="_LOAISP", ThisKey="MALOAISP", OtherKey="MALOAISP", IsForeignKey=true)]
		public LOAISP LOAISP
		{
			get
			{
				return this._LOAISP.Entity;
			}
			set
			{
				LOAISP previousValue = this._LOAISP.Entity;
				if (((previousValue != value) 
							|| (this._LOAISP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISP.Entity = null;
						previousValue.CT_LOAISPs.Remove(this);
					}
					this._LOAISP.Entity = value;
					if ((value != null))
					{
						value.CT_LOAISPs.Add(this);
						this._MALOAISP = value.MALOAISP;
					}
					else
					{
						this._MALOAISP = default(string);
					}
					this.SendPropertyChanged("LOAISP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CT_LOAISP", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CT_LOAISPs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CT_LOAISPs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_NHAPHANG")]
	public partial class CT_NHAPHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MANH;
		
		private int _MASP;
		
		private System.Nullable<decimal> _GIANHAP;
		
		private System.Nullable<int> _SOLUONGNHAP;
		
		private EntityRef<DONNHAPHANG> _DONNHAPHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANHChanging(int value);
    partial void OnMANHChanged();
    partial void OnMASPChanging(int value);
    partial void OnMASPChanged();
    partial void OnGIANHAPChanging(System.Nullable<decimal> value);
    partial void OnGIANHAPChanged();
    partial void OnSOLUONGNHAPChanging(System.Nullable<int> value);
    partial void OnSOLUONGNHAPChanged();
    #endregion
		
		public CT_NHAPHANG()
		{
			this._DONNHAPHANG = default(EntityRef<DONNHAPHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MANH
		{
			get
			{
				return this._MANH;
			}
			set
			{
				if ((this._MANH != value))
				{
					if (this._DONNHAPHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANHChanging(value);
					this.SendPropertyChanging();
					this._MANH = value;
					this.SendPropertyChanged("MANH");
					this.OnMANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIANHAP", DbType="Decimal(12,0)")]
		public System.Nullable<decimal> GIANHAP
		{
			get
			{
				return this._GIANHAP;
			}
			set
			{
				if ((this._GIANHAP != value))
				{
					this.OnGIANHAPChanging(value);
					this.SendPropertyChanging();
					this._GIANHAP = value;
					this.SendPropertyChanged("GIANHAP");
					this.OnGIANHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGNHAP", DbType="Int")]
		public System.Nullable<int> SOLUONGNHAP
		{
			get
			{
				return this._SOLUONGNHAP;
			}
			set
			{
				if ((this._SOLUONGNHAP != value))
				{
					this.OnSOLUONGNHAPChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGNHAP = value;
					this.SendPropertyChanged("SOLUONGNHAP");
					this.OnSOLUONGNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONNHAPHANG_CT_NHAPHANG", Storage="_DONNHAPHANG", ThisKey="MANH", OtherKey="MANH", IsForeignKey=true)]
		public DONNHAPHANG DONNHAPHANG
		{
			get
			{
				return this._DONNHAPHANG.Entity;
			}
			set
			{
				DONNHAPHANG previousValue = this._DONNHAPHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONNHAPHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONNHAPHANG.Entity = null;
						previousValue.CT_NHAPHANGs.Remove(this);
					}
					this._DONNHAPHANG.Entity = value;
					if ((value != null))
					{
						value.CT_NHAPHANGs.Add(this);
						this._MANH = value.MANH;
					}
					else
					{
						this._MANH = default(int);
					}
					this.SendPropertyChanged("DONNHAPHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CT_NHAPHANG", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CT_NHAPHANGs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CT_NHAPHANGs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONDATHANG")]
	public partial class DONDATHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MADDH;
		
		private System.Nullable<System.DateTime> _NGAYDAT;
		
		private System.Nullable<System.DateTime> _NGAYGIAO;
		
		private string _GHICHU;
		
		private System.Nullable<decimal> _TONGTIENDAT;
		
		private int _MAHTTT;
		
		private System.Nullable<bool> _TRANGTHAITHANHTOAN;
		
		private System.Nullable<bool> _TRANGTHAIGIAOHANG;
		
		private int _MAKH;
		
		private EntitySet<CT_DATHANG> _CT_DATHANGs;
		
		private EntityRef<HINHTHUCTHANHTOAN> _HINHTHUCTHANHTOAN;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADDHChanging(int value);
    partial void OnMADDHChanged();
    partial void OnNGAYDATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDATChanged();
    partial void OnNGAYGIAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYGIAOChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    partial void OnTONGTIENDATChanging(System.Nullable<decimal> value);
    partial void OnTONGTIENDATChanged();
    partial void OnMAHTTTChanging(int value);
    partial void OnMAHTTTChanged();
    partial void OnTRANGTHAITHANHTOANChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAITHANHTOANChanged();
    partial void OnTRANGTHAIGIAOHANGChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIGIAOHANGChanged();
    partial void OnMAKHChanging(int value);
    partial void OnMAKHChanged();
    #endregion
		
		public DONDATHANG()
		{
			this._CT_DATHANGs = new EntitySet<CT_DATHANG>(new Action<CT_DATHANG>(this.attach_CT_DATHANGs), new Action<CT_DATHANG>(this.detach_CT_DATHANGs));
			this._HINHTHUCTHANHTOAN = default(EntityRef<HINHTHUCTHANHTOAN>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADDH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MADDH
		{
			get
			{
				return this._MADDH;
			}
			set
			{
				if ((this._MADDH != value))
				{
					this.OnMADDHChanging(value);
					this.SendPropertyChanging();
					this._MADDH = value;
					this.SendPropertyChanged("MADDH");
					this.OnMADDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYDAT
		{
			get
			{
				return this._NGAYDAT;
			}
			set
			{
				if ((this._NGAYDAT != value))
				{
					this.OnNGAYDATChanging(value);
					this.SendPropertyChanging();
					this._NGAYDAT = value;
					this.SendPropertyChanged("NGAYDAT");
					this.OnNGAYDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYGIAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYGIAO
		{
			get
			{
				return this._NGAYGIAO;
			}
			set
			{
				if ((this._NGAYGIAO != value))
				{
					this.OnNGAYGIAOChanging(value);
					this.SendPropertyChanging();
					this._NGAYGIAO = value;
					this.SendPropertyChanged("NGAYGIAO");
					this.OnNGAYGIAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="NVarChar(MAX)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIENDAT", DbType="Decimal(12,0)")]
		public System.Nullable<decimal> TONGTIENDAT
		{
			get
			{
				return this._TONGTIENDAT;
			}
			set
			{
				if ((this._TONGTIENDAT != value))
				{
					this.OnTONGTIENDATChanging(value);
					this.SendPropertyChanging();
					this._TONGTIENDAT = value;
					this.SendPropertyChanged("TONGTIENDAT");
					this.OnTONGTIENDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHTTT", DbType="Int NOT NULL")]
		public int MAHTTT
		{
			get
			{
				return this._MAHTTT;
			}
			set
			{
				if ((this._MAHTTT != value))
				{
					if (this._HINHTHUCTHANHTOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHTTTChanging(value);
					this.SendPropertyChanging();
					this._MAHTTT = value;
					this.SendPropertyChanged("MAHTTT");
					this.OnMAHTTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAITHANHTOAN", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAITHANHTOAN
		{
			get
			{
				return this._TRANGTHAITHANHTOAN;
			}
			set
			{
				if ((this._TRANGTHAITHANHTOAN != value))
				{
					this.OnTRANGTHAITHANHTOANChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAITHANHTOAN = value;
					this.SendPropertyChanged("TRANGTHAITHANHTOAN");
					this.OnTRANGTHAITHANHTOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAIGIAOHANG", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAIGIAOHANG
		{
			get
			{
				return this._TRANGTHAIGIAOHANG;
			}
			set
			{
				if ((this._TRANGTHAIGIAOHANG != value))
				{
					this.OnTRANGTHAIGIAOHANGChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAIGIAOHANG = value;
					this.SendPropertyChanged("TRANGTHAIGIAOHANG");
					this.OnTRANGTHAIGIAOHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Int NOT NULL")]
		public int MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONDATHANG_CT_DATHANG", Storage="_CT_DATHANGs", ThisKey="MADDH", OtherKey="MADDH")]
		public EntitySet<CT_DATHANG> CT_DATHANGs
		{
			get
			{
				return this._CT_DATHANGs;
			}
			set
			{
				this._CT_DATHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HINHTHUCTHANHTOAN_DONDATHANG", Storage="_HINHTHUCTHANHTOAN", ThisKey="MAHTTT", OtherKey="MAHTTT", IsForeignKey=true)]
		public HINHTHUCTHANHTOAN HINHTHUCTHANHTOAN
		{
			get
			{
				return this._HINHTHUCTHANHTOAN.Entity;
			}
			set
			{
				HINHTHUCTHANHTOAN previousValue = this._HINHTHUCTHANHTOAN.Entity;
				if (((previousValue != value) 
							|| (this._HINHTHUCTHANHTOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HINHTHUCTHANHTOAN.Entity = null;
						previousValue.DONDATHANGs.Remove(this);
					}
					this._HINHTHUCTHANHTOAN.Entity = value;
					if ((value != null))
					{
						value.DONDATHANGs.Add(this);
						this._MAHTTT = value.MAHTTT;
					}
					else
					{
						this._MAHTTT = default(int);
					}
					this.SendPropertyChanged("HINHTHUCTHANHTOAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONDATHANG", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.DONDATHANGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.DONDATHANGs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(int);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DATHANGs(CT_DATHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONDATHANG = this;
		}
		
		private void detach_CT_DATHANGs(CT_DATHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONDATHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONNHAPHANG")]
	public partial class DONNHAPHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MANH;
		
		private System.Nullable<System.DateTime> _NGAYNHAP;
		
		private System.Nullable<decimal> _TONGTIENNHAP;
		
		private EntitySet<CT_NHAPHANG> _CT_NHAPHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANHChanging(int value);
    partial void OnMANHChanged();
    partial void OnNGAYNHAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYNHAPChanged();
    partial void OnTONGTIENNHAPChanging(System.Nullable<decimal> value);
    partial void OnTONGTIENNHAPChanged();
    #endregion
		
		public DONNHAPHANG()
		{
			this._CT_NHAPHANGs = new EntitySet<CT_NHAPHANG>(new Action<CT_NHAPHANG>(this.attach_CT_NHAPHANGs), new Action<CT_NHAPHANG>(this.detach_CT_NHAPHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MANH
		{
			get
			{
				return this._MANH;
			}
			set
			{
				if ((this._MANH != value))
				{
					this.OnMANHChanging(value);
					this.SendPropertyChanging();
					this._MANH = value;
					this.SendPropertyChanged("MANH");
					this.OnMANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYNHAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYNHAP
		{
			get
			{
				return this._NGAYNHAP;
			}
			set
			{
				if ((this._NGAYNHAP != value))
				{
					this.OnNGAYNHAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYNHAP = value;
					this.SendPropertyChanged("NGAYNHAP");
					this.OnNGAYNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIENNHAP", DbType="Decimal(12,0)")]
		public System.Nullable<decimal> TONGTIENNHAP
		{
			get
			{
				return this._TONGTIENNHAP;
			}
			set
			{
				if ((this._TONGTIENNHAP != value))
				{
					this.OnTONGTIENNHAPChanging(value);
					this.SendPropertyChanging();
					this._TONGTIENNHAP = value;
					this.SendPropertyChanged("TONGTIENNHAP");
					this.OnTONGTIENNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONNHAPHANG_CT_NHAPHANG", Storage="_CT_NHAPHANGs", ThisKey="MANH", OtherKey="MANH")]
		public EntitySet<CT_NHAPHANG> CT_NHAPHANGs
		{
			get
			{
				return this._CT_NHAPHANGs;
			}
			set
			{
				this._CT_NHAPHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_NHAPHANGs(CT_NHAPHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONNHAPHANG = this;
		}
		
		private void detach_CT_NHAPHANGs(CT_NHAPHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONNHAPHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HINHANH")]
	public partial class HINHANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAHINH;
		
		private string _URLHINH;
		
		private int _MASP;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHINHChanging(int value);
    partial void OnMAHINHChanged();
    partial void OnURLHINHChanging(string value);
    partial void OnURLHINHChanged();
    partial void OnMASPChanging(int value);
    partial void OnMASPChanged();
    #endregion
		
		public HINHANH()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHINH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAHINH
		{
			get
			{
				return this._MAHINH;
			}
			set
			{
				if ((this._MAHINH != value))
				{
					this.OnMAHINHChanging(value);
					this.SendPropertyChanging();
					this._MAHINH = value;
					this.SendPropertyChanged("MAHINH");
					this.OnMAHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URLHINH", DbType="VarChar(MAX)")]
		public string URLHINH
		{
			get
			{
				return this._URLHINH;
			}
			set
			{
				if ((this._URLHINH != value))
				{
					this.OnURLHINHChanging(value);
					this.SendPropertyChanging();
					this._URLHINH = value;
					this.SendPropertyChanged("URLHINH");
					this.OnURLHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Int NOT NULL")]
		public int MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_HINHANH", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.HINHANHs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.HINHANHs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HINHTHUCTHANHTOAN")]
	public partial class HINHTHUCTHANHTOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAHTTT;
		
		private string _TENHTTT;
		
		private EntitySet<DONDATHANG> _DONDATHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHTTTChanging(int value);
    partial void OnMAHTTTChanged();
    partial void OnTENHTTTChanging(string value);
    partial void OnTENHTTTChanged();
    #endregion
		
		public HINHTHUCTHANHTOAN()
		{
			this._DONDATHANGs = new EntitySet<DONDATHANG>(new Action<DONDATHANG>(this.attach_DONDATHANGs), new Action<DONDATHANG>(this.detach_DONDATHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHTTT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAHTTT
		{
			get
			{
				return this._MAHTTT;
			}
			set
			{
				if ((this._MAHTTT != value))
				{
					this.OnMAHTTTChanging(value);
					this.SendPropertyChanging();
					this._MAHTTT = value;
					this.SendPropertyChanged("MAHTTT");
					this.OnMAHTTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHTTT", DbType="NVarChar(50)")]
		public string TENHTTT
		{
			get
			{
				return this._TENHTTT;
			}
			set
			{
				if ((this._TENHTTT != value))
				{
					this.OnTENHTTTChanging(value);
					this.SendPropertyChanging();
					this._TENHTTT = value;
					this.SendPropertyChanged("TENHTTT");
					this.OnTENHTTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HINHTHUCTHANHTOAN_DONDATHANG", Storage="_DONDATHANGs", ThisKey="MAHTTT", OtherKey="MAHTTT")]
		public EntitySet<DONDATHANG> DONDATHANGs
		{
			get
			{
				return this._DONDATHANGs;
			}
			set
			{
				this._DONDATHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONDATHANGs(DONDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.HINHTHUCTHANHTOAN = this;
		}
		
		private void detach_DONDATHANGs(DONDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.HINHTHUCTHANHTOAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAKH;
		
		private string _EMAILKH;
		
		private string _MATKHAU;
		
		private string _HOTENKH;
		
		private string _DIACHIKH;
		
		private string _SODTKH;
		
		private EntitySet<DONDATHANG> _DONDATHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(int value);
    partial void OnMAKHChanged();
    partial void OnEMAILKHChanging(string value);
    partial void OnEMAILKHChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnHOTENKHChanging(string value);
    partial void OnHOTENKHChanged();
    partial void OnDIACHIKHChanging(string value);
    partial void OnDIACHIKHChanged();
    partial void OnSODTKHChanging(string value);
    partial void OnSODTKHChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._DONDATHANGs = new EntitySet<DONDATHANG>(new Action<DONDATHANG>(this.attach_DONDATHANGs), new Action<DONDATHANG>(this.detach_DONDATHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAILKH", DbType="VarChar(50)")]
		public string EMAILKH
		{
			get
			{
				return this._EMAILKH;
			}
			set
			{
				if ((this._EMAILKH != value))
				{
					this.OnEMAILKHChanging(value);
					this.SendPropertyChanging();
					this._EMAILKH = value;
					this.SendPropertyChanged("EMAILKH");
					this.OnEMAILKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="VarChar(20)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTENKH", DbType="NVarChar(50)")]
		public string HOTENKH
		{
			get
			{
				return this._HOTENKH;
			}
			set
			{
				if ((this._HOTENKH != value))
				{
					this.OnHOTENKHChanging(value);
					this.SendPropertyChanging();
					this._HOTENKH = value;
					this.SendPropertyChanged("HOTENKH");
					this.OnHOTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHIKH", DbType="NVarChar(MAX)")]
		public string DIACHIKH
		{
			get
			{
				return this._DIACHIKH;
			}
			set
			{
				if ((this._DIACHIKH != value))
				{
					this.OnDIACHIKHChanging(value);
					this.SendPropertyChanging();
					this._DIACHIKH = value;
					this.SendPropertyChanged("DIACHIKH");
					this.OnDIACHIKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODTKH", DbType="VarChar(11)")]
		public string SODTKH
		{
			get
			{
				return this._SODTKH;
			}
			set
			{
				if ((this._SODTKH != value))
				{
					this.OnSODTKHChanging(value);
					this.SendPropertyChanging();
					this._SODTKH = value;
					this.SendPropertyChanged("SODTKH");
					this.OnSODTKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONDATHANG", Storage="_DONDATHANGs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<DONDATHANG> DONDATHANGs
		{
			get
			{
				return this._DONDATHANGs;
			}
			set
			{
				this._DONDATHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONDATHANGs(DONDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_DONDATHANGs(DONDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAISP")]
	public partial class LOAISP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOAISP;
		
		private string _TENLOAISP;
		
		private EntitySet<SIZE> _SIZEs;
		
		private EntitySet<CT_LOAISP> _CT_LOAISPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAISPChanging(string value);
    partial void OnMALOAISPChanged();
    partial void OnTENLOAISPChanging(string value);
    partial void OnTENLOAISPChanged();
    #endregion
		
		public LOAISP()
		{
			this._SIZEs = new EntitySet<SIZE>(new Action<SIZE>(this.attach_SIZEs), new Action<SIZE>(this.detach_SIZEs));
			this._CT_LOAISPs = new EntitySet<CT_LOAISP>(new Action<CT_LOAISP>(this.attach_CT_LOAISPs), new Action<CT_LOAISP>(this.detach_CT_LOAISPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAISP", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOAISP
		{
			get
			{
				return this._MALOAISP;
			}
			set
			{
				if ((this._MALOAISP != value))
				{
					this.OnMALOAISPChanging(value);
					this.SendPropertyChanging();
					this._MALOAISP = value;
					this.SendPropertyChanged("MALOAISP");
					this.OnMALOAISPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAISP", DbType="NVarChar(5)")]
		public string TENLOAISP
		{
			get
			{
				return this._TENLOAISP;
			}
			set
			{
				if ((this._TENLOAISP != value))
				{
					this.OnTENLOAISPChanging(value);
					this.SendPropertyChanging();
					this._TENLOAISP = value;
					this.SendPropertyChanged("TENLOAISP");
					this.OnTENLOAISPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_SIZE", Storage="_SIZEs", ThisKey="MALOAISP", OtherKey="MALOAISP")]
		public EntitySet<SIZE> SIZEs
		{
			get
			{
				return this._SIZEs;
			}
			set
			{
				this._SIZEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_CT_LOAISP", Storage="_CT_LOAISPs", ThisKey="MALOAISP", OtherKey="MALOAISP")]
		public EntitySet<CT_LOAISP> CT_LOAISPs
		{
			get
			{
				return this._CT_LOAISPs;
			}
			set
			{
				this._CT_LOAISPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SIZEs(SIZE entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = this;
		}
		
		private void detach_SIZEs(SIZE entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = null;
		}
		
		private void attach_CT_LOAISPs(CT_LOAISP entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = this;
		}
		
		private void detach_CT_LOAISPs(CT_LOAISP entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONGCACH")]
	public partial class PHONGCACH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPC;
		
		private string _TENPC;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPCChanging(int value);
    partial void OnMAPCChanged();
    partial void OnTENPCChanging(string value);
    partial void OnTENPCChanged();
    #endregion
		
		public PHONGCACH()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAPC
		{
			get
			{
				return this._MAPC;
			}
			set
			{
				if ((this._MAPC != value))
				{
					this.OnMAPCChanging(value);
					this.SendPropertyChanging();
					this._MAPC = value;
					this.SendPropertyChanged("MAPC");
					this.OnMAPCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPC", DbType="NVarChar(50)")]
		public string TENPC
		{
			get
			{
				return this._TENPC;
			}
			set
			{
				if ((this._TENPC != value))
				{
					this.OnTENPCChanging(value);
					this.SendPropertyChanging();
					this._TENPC = value;
					this.SendPropertyChanged("TENPC");
					this.OnTENPCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGCACH_SANPHAM", Storage="_SANPHAMs", ThisKey="MAPC", OtherKey="MAPC")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.PHONGCACH = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.PHONGCACH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.REVIEW")]
	public partial class REVIEW : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _email;
		
		private string _phone;
		
		private string _review1;
		
		private System.Nullable<int> _MASP;
		
		private System.Nullable<System.DateTime> _time;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnreviewChanging(string value);
    partial void OnreviewChanged();
    partial void OnMASPChanging(System.Nullable<int> value);
    partial void OnMASPChanged();
    partial void OntimeChanging(System.Nullable<System.DateTime> value);
    partial void OntimeChanged();
    #endregion
		
		public REVIEW()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(11)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review1", DbType="NVarChar(MAX)")]
		public string review
		{
			get
			{
				return this._review1;
			}
			set
			{
				if ((this._review1 != value))
				{
					this.OnreviewChanging(value);
					this.SendPropertyChanging();
					this._review1 = value;
					this.SendPropertyChanged("review");
					this.OnreviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Int")]
		public System.Nullable<int> MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_REVIEW", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.REVIEWs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.REVIEWs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(Nullable<int>);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MASP;
		
		private string _TENSP;
		
		private System.Nullable<int> _SOLUONGTON;
		
		private System.Nullable<decimal> _GIABAN;
		
		private System.DateTime _NGAYCAPNHAT;
		
		private int _MATH;
		
		private int _MAPC;
		
		private EntitySet<CT_DATHANG> _CT_DATHANGs;
		
		private EntitySet<CT_LOAISP> _CT_LOAISPs;
		
		private EntitySet<CT_NHAPHANG> _CT_NHAPHANGs;
		
		private EntitySet<HINHANH> _HINHANHs;
		
		private EntitySet<REVIEW> _REVIEWs;
		
		private EntityRef<PHONGCACH> _PHONGCACH;
		
		private EntityRef<THUONGHIEU> _THUONGHIEU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(int value);
    partial void OnMASPChanged();
    partial void OnTENSPChanging(string value);
    partial void OnTENSPChanged();
    partial void OnSOLUONGTONChanging(System.Nullable<int> value);
    partial void OnSOLUONGTONChanged();
    partial void OnGIABANChanging(System.Nullable<decimal> value);
    partial void OnGIABANChanged();
    partial void OnNGAYCAPNHATChanging(System.DateTime value);
    partial void OnNGAYCAPNHATChanged();
    partial void OnMATHChanging(int value);
    partial void OnMATHChanged();
    partial void OnMAPCChanging(int value);
    partial void OnMAPCChanged();
    #endregion
		
		public SANPHAM()
		{
			this._CT_DATHANGs = new EntitySet<CT_DATHANG>(new Action<CT_DATHANG>(this.attach_CT_DATHANGs), new Action<CT_DATHANG>(this.detach_CT_DATHANGs));
			this._CT_LOAISPs = new EntitySet<CT_LOAISP>(new Action<CT_LOAISP>(this.attach_CT_LOAISPs), new Action<CT_LOAISP>(this.detach_CT_LOAISPs));
			this._CT_NHAPHANGs = new EntitySet<CT_NHAPHANG>(new Action<CT_NHAPHANG>(this.attach_CT_NHAPHANGs), new Action<CT_NHAPHANG>(this.detach_CT_NHAPHANGs));
			this._HINHANHs = new EntitySet<HINHANH>(new Action<HINHANH>(this.attach_HINHANHs), new Action<HINHANH>(this.detach_HINHANHs));
			this._REVIEWs = new EntitySet<REVIEW>(new Action<REVIEW>(this.attach_REVIEWs), new Action<REVIEW>(this.detach_REVIEWs));
			this._PHONGCACH = default(EntityRef<PHONGCACH>);
			this._THUONGHIEU = default(EntityRef<THUONGHIEU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSP", DbType="NVarChar(50)")]
		public string TENSP
		{
			get
			{
				return this._TENSP;
			}
			set
			{
				if ((this._TENSP != value))
				{
					this.OnTENSPChanging(value);
					this.SendPropertyChanging();
					this._TENSP = value;
					this.SendPropertyChanged("TENSP");
					this.OnTENSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGTON", DbType="Int")]
		public System.Nullable<int> SOLUONGTON
		{
			get
			{
				return this._SOLUONGTON;
			}
			set
			{
				if ((this._SOLUONGTON != value))
				{
					this.OnSOLUONGTONChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGTON = value;
					this.SendPropertyChanged("SOLUONGTON");
					this.OnSOLUONGTONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIABAN", DbType="Decimal(12,0)")]
		public System.Nullable<decimal> GIABAN
		{
			get
			{
				return this._GIABAN;
			}
			set
			{
				if ((this._GIABAN != value))
				{
					this.OnGIABANChanging(value);
					this.SendPropertyChanging();
					this._GIABAN = value;
					this.SendPropertyChanged("GIABAN");
					this.OnGIABANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYCAPNHAT", DbType="DateTime NOT NULL")]
		public System.DateTime NGAYCAPNHAT
		{
			get
			{
				return this._NGAYCAPNHAT;
			}
			set
			{
				if ((this._NGAYCAPNHAT != value))
				{
					this.OnNGAYCAPNHATChanging(value);
					this.SendPropertyChanging();
					this._NGAYCAPNHAT = value;
					this.SendPropertyChanged("NGAYCAPNHAT");
					this.OnNGAYCAPNHATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATH", DbType="Int NOT NULL")]
		public int MATH
		{
			get
			{
				return this._MATH;
			}
			set
			{
				if ((this._MATH != value))
				{
					if (this._THUONGHIEU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATHChanging(value);
					this.SendPropertyChanging();
					this._MATH = value;
					this.SendPropertyChanged("MATH");
					this.OnMATHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPC", DbType="Int NOT NULL")]
		public int MAPC
		{
			get
			{
				return this._MAPC;
			}
			set
			{
				if ((this._MAPC != value))
				{
					if (this._PHONGCACH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPCChanging(value);
					this.SendPropertyChanging();
					this._MAPC = value;
					this.SendPropertyChanged("MAPC");
					this.OnMAPCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CT_DATHANG", Storage="_CT_DATHANGs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CT_DATHANG> CT_DATHANGs
		{
			get
			{
				return this._CT_DATHANGs;
			}
			set
			{
				this._CT_DATHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CT_LOAISP", Storage="_CT_LOAISPs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CT_LOAISP> CT_LOAISPs
		{
			get
			{
				return this._CT_LOAISPs;
			}
			set
			{
				this._CT_LOAISPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CT_NHAPHANG", Storage="_CT_NHAPHANGs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CT_NHAPHANG> CT_NHAPHANGs
		{
			get
			{
				return this._CT_NHAPHANGs;
			}
			set
			{
				this._CT_NHAPHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_HINHANH", Storage="_HINHANHs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<HINHANH> HINHANHs
		{
			get
			{
				return this._HINHANHs;
			}
			set
			{
				this._HINHANHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_REVIEW", Storage="_REVIEWs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<REVIEW> REVIEWs
		{
			get
			{
				return this._REVIEWs;
			}
			set
			{
				this._REVIEWs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGCACH_SANPHAM", Storage="_PHONGCACH", ThisKey="MAPC", OtherKey="MAPC", IsForeignKey=true)]
		public PHONGCACH PHONGCACH
		{
			get
			{
				return this._PHONGCACH.Entity;
			}
			set
			{
				PHONGCACH previousValue = this._PHONGCACH.Entity;
				if (((previousValue != value) 
							|| (this._PHONGCACH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONGCACH.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._PHONGCACH.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MAPC = value.MAPC;
					}
					else
					{
						this._MAPC = default(int);
					}
					this.SendPropertyChanged("PHONGCACH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THUONGHIEU_SANPHAM", Storage="_THUONGHIEU", ThisKey="MATH", OtherKey="MATH", IsForeignKey=true)]
		public THUONGHIEU THUONGHIEU
		{
			get
			{
				return this._THUONGHIEU.Entity;
			}
			set
			{
				THUONGHIEU previousValue = this._THUONGHIEU.Entity;
				if (((previousValue != value) 
							|| (this._THUONGHIEU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THUONGHIEU.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._THUONGHIEU.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MATH = value.MATH;
					}
					else
					{
						this._MATH = default(int);
					}
					this.SendPropertyChanged("THUONGHIEU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DATHANGs(CT_DATHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CT_DATHANGs(CT_DATHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CT_LOAISPs(CT_LOAISP entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CT_LOAISPs(CT_LOAISP entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CT_NHAPHANGs(CT_NHAPHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CT_NHAPHANGs(CT_NHAPHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_HINHANHs(HINHANH entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_HINHANHs(HINHANH entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_REVIEWs(REVIEW entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_REVIEWs(REVIEW entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THUONGHIEU")]
	public partial class THUONGHIEU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MATH;
		
		private string _TENTH;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATHChanging(int value);
    partial void OnMATHChanged();
    partial void OnTENTHChanging(string value);
    partial void OnTENTHChanged();
    #endregion
		
		public THUONGHIEU()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MATH
		{
			get
			{
				return this._MATH;
			}
			set
			{
				if ((this._MATH != value))
				{
					this.OnMATHChanging(value);
					this.SendPropertyChanging();
					this._MATH = value;
					this.SendPropertyChanged("MATH");
					this.OnMATHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTH", DbType="NVarChar(50)")]
		public string TENTH
		{
			get
			{
				return this._TENTH;
			}
			set
			{
				if ((this._TENTH != value))
				{
					this.OnTENTHChanging(value);
					this.SendPropertyChanging();
					this._TENTH = value;
					this.SendPropertyChanged("TENTH");
					this.OnTENTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THUONGHIEU_SANPHAM", Storage="_SANPHAMs", ThisKey="MATH", OtherKey="MATH")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.THUONGHIEU = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.THUONGHIEU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIENHE")]
	public partial class LIENHE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MALH;
		
		private string _HOTENLH;
		
		private string _CONGTYLH;
		
		private string _DIENTHOAILH;
		
		private string _EMAILLH;
		
		private string _VANDELH;
		
		private string _NOIDUNG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALHChanging(int value);
    partial void OnMALHChanged();
    partial void OnHOTENLHChanging(string value);
    partial void OnHOTENLHChanged();
    partial void OnCONGTYLHChanging(string value);
    partial void OnCONGTYLHChanged();
    partial void OnDIENTHOAILHChanging(string value);
    partial void OnDIENTHOAILHChanged();
    partial void OnEMAILLHChanging(string value);
    partial void OnEMAILLHChanged();
    partial void OnVANDELHChanging(string value);
    partial void OnVANDELHChanged();
    partial void OnNOIDUNGChanging(string value);
    partial void OnNOIDUNGChanged();
    #endregion
		
		public LIENHE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MALH
		{
			get
			{
				return this._MALH;
			}
			set
			{
				if ((this._MALH != value))
				{
					this.OnMALHChanging(value);
					this.SendPropertyChanging();
					this._MALH = value;
					this.SendPropertyChanged("MALH");
					this.OnMALHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTENLH", DbType="NVarChar(30)")]
		public string HOTENLH
		{
			get
			{
				return this._HOTENLH;
			}
			set
			{
				if ((this._HOTENLH != value))
				{
					this.OnHOTENLHChanging(value);
					this.SendPropertyChanging();
					this._HOTENLH = value;
					this.SendPropertyChanged("HOTENLH");
					this.OnHOTENLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONGTYLH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CONGTYLH
		{
			get
			{
				return this._CONGTYLH;
			}
			set
			{
				if ((this._CONGTYLH != value))
				{
					this.OnCONGTYLHChanging(value);
					this.SendPropertyChanging();
					this._CONGTYLH = value;
					this.SendPropertyChanged("CONGTYLH");
					this.OnCONGTYLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIENTHOAILH", DbType="VarChar(11)")]
		public string DIENTHOAILH
		{
			get
			{
				return this._DIENTHOAILH;
			}
			set
			{
				if ((this._DIENTHOAILH != value))
				{
					this.OnDIENTHOAILHChanging(value);
					this.SendPropertyChanging();
					this._DIENTHOAILH = value;
					this.SendPropertyChanged("DIENTHOAILH");
					this.OnDIENTHOAILHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAILLH", DbType="VarChar(50)")]
		public string EMAILLH
		{
			get
			{
				return this._EMAILLH;
			}
			set
			{
				if ((this._EMAILLH != value))
				{
					this.OnEMAILLHChanging(value);
					this.SendPropertyChanging();
					this._EMAILLH = value;
					this.SendPropertyChanged("EMAILLH");
					this.OnEMAILLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VANDELH", DbType="NVarChar(MAX)")]
		public string VANDELH
		{
			get
			{
				return this._VANDELH;
			}
			set
			{
				if ((this._VANDELH != value))
				{
					this.OnVANDELHChanging(value);
					this.SendPropertyChanging();
					this._VANDELH = value;
					this.SendPropertyChanged("VANDELH");
					this.OnVANDELHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNG", DbType="NVarChar(MAX)")]
		public string NOIDUNG
		{
			get
			{
				return this._NOIDUNG;
			}
			set
			{
				if ((this._NOIDUNG != value))
				{
					this.OnNOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNG = value;
					this.SendPropertyChanged("NOIDUNG");
					this.OnNOIDUNGChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
